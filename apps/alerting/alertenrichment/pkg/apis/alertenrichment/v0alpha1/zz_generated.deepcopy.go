//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by deepcopy-gen. DO NOT EDIT.

package v0alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertEnrichment) DeepCopyInto(out *AlertEnrichment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertEnrichment.
func (in *AlertEnrichment) DeepCopy() *AlertEnrichment {
	if in == nil {
		return nil
	}
	out := new(AlertEnrichment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertEnrichment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertEnrichmentJSONCodec) DeepCopyInto(out *AlertEnrichmentJSONCodec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertEnrichmentJSONCodec.
func (in *AlertEnrichmentJSONCodec) DeepCopy() *AlertEnrichmentJSONCodec {
	if in == nil {
		return nil
	}
	out := new(AlertEnrichmentJSONCodec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertEnrichmentList) DeepCopyInto(out *AlertEnrichmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlertEnrichment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertEnrichmentList.
func (in *AlertEnrichmentList) DeepCopy() *AlertEnrichmentList {
	if in == nil {
		return nil
	}
	out := new(AlertEnrichmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertEnrichmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertEnrichmentSpec) DeepCopyInto(out *AlertEnrichmentSpec) {
	*out = *in
	if in.AlertRuleUIDs != nil {
		in, out := &in.AlertRuleUIDs, &out.AlertRuleUIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LabelMatchers != nil {
		in, out := &in.LabelMatchers, &out.LabelMatchers
		*out = make([]Matcher, len(*in))
		copy(*out, *in)
	}
	if in.AnnotationMatchers != nil {
		in, out := &in.AnnotationMatchers, &out.AnnotationMatchers
		*out = make([]Matcher, len(*in))
		copy(*out, *in)
	}
	if in.Receivers != nil {
		in, out := &in.Receivers, &out.Receivers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]Step, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertEnrichmentSpec.
func (in *AlertEnrichmentSpec) DeepCopy() *AlertEnrichmentSpec {
	if in == nil {
		return nil
	}
	out := new(AlertEnrichmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssertsEnricher) DeepCopyInto(out *AssertsEnricher) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssertsEnricher.
func (in *AssertsEnricher) DeepCopy() *AssertsEnricher {
	if in == nil {
		return nil
	}
	out := new(AssertsEnricher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssignEnricher) DeepCopyInto(out *AssignEnricher) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]Assignment, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssignEnricher.
func (in *AssignEnricher) DeepCopy() *AssignEnricher {
	if in == nil {
		return nil
	}
	out := new(AssignEnricher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Assignment) DeepCopyInto(out *Assignment) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Assignment.
func (in *Assignment) DeepCopy() *Assignment {
	if in == nil {
		return nil
	}
	out := new(Assignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Condition) DeepCopyInto(out *Condition) {
	*out = *in
	if in.LabelMatchers != nil {
		in, out := &in.LabelMatchers, &out.LabelMatchers
		*out = make([]Matcher, len(*in))
		copy(*out, *in)
	}
	if in.AnnotationMatchers != nil {
		in, out := &in.AnnotationMatchers, &out.AnnotationMatchers
		*out = make([]Matcher, len(*in))
		copy(*out, *in)
	}
	if in.DataSourceQuery != nil {
		in, out := &in.DataSourceQuery, &out.DataSourceQuery
		*out = new(RawDataSourceQuery)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Condition.
func (in *Condition) DeepCopy() *Condition {
	if in == nil {
		return nil
	}
	out := new(Condition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Conditional) DeepCopyInto(out *Conditional) {
	*out = *in
	in.If.DeepCopyInto(&out.If)
	if in.Then != nil {
		in, out := &in.Then, &out.Then
		*out = make([]Step, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Else != nil {
		in, out := &in.Else, &out.Else
		*out = make([]Step, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Conditional.
func (in *Conditional) DeepCopy() *Conditional {
	if in == nil {
		return nil
	}
	out := new(Conditional)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceEnricher) DeepCopyInto(out *DataSourceEnricher) {
	*out = *in
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = new(RawDataSourceQuery)
		(*in).DeepCopyInto(*out)
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = new(LogsDataSourceQuery)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceEnricher.
func (in *DataSourceEnricher) DeepCopy() *DataSourceEnricher {
	if in == nil {
		return nil
	}
	out := new(DataSourceEnricher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnricherConfig) DeepCopyInto(out *EnricherConfig) {
	*out = *in
	if in.Assign != nil {
		in, out := &in.Assign, &out.Assign
		*out = new(AssignEnricher)
		(*in).DeepCopyInto(*out)
	}
	if in.External != nil {
		in, out := &in.External, &out.External
		*out = new(ExternalEnricher)
		**out = **in
	}
	if in.DataSource != nil {
		in, out := &in.DataSource, &out.DataSource
		*out = new(DataSourceEnricher)
		(*in).DeepCopyInto(*out)
	}
	if in.Sift != nil {
		in, out := &in.Sift, &out.Sift
		*out = new(SiftEnricher)
		**out = **in
	}
	if in.Asserts != nil {
		in, out := &in.Asserts, &out.Asserts
		*out = new(AssertsEnricher)
		**out = **in
	}
	if in.Explain != nil {
		in, out := &in.Explain, &out.Explain
		*out = new(ExplainEnricher)
		**out = **in
	}
	if in.Loop != nil {
		in, out := &in.Loop, &out.Loop
		*out = new(LoopEnricher)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnricherConfig.
func (in *EnricherConfig) DeepCopy() *EnricherConfig {
	if in == nil {
		return nil
	}
	out := new(EnricherConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExplainEnricher) DeepCopyInto(out *ExplainEnricher) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExplainEnricher.
func (in *ExplainEnricher) DeepCopy() *ExplainEnricher {
	if in == nil {
		return nil
	}
	out := new(ExplainEnricher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalEnricher) DeepCopyInto(out *ExternalEnricher) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalEnricher.
func (in *ExternalEnricher) DeepCopy() *ExternalEnricher {
	if in == nil {
		return nil
	}
	out := new(ExternalEnricher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsDataSourceQuery) DeepCopyInto(out *LogsDataSourceQuery) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsDataSourceQuery.
func (in *LogsDataSourceQuery) DeepCopy() *LogsDataSourceQuery {
	if in == nil {
		return nil
	}
	out := new(LogsDataSourceQuery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoopEnricher) DeepCopyInto(out *LoopEnricher) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoopEnricher.
func (in *LoopEnricher) DeepCopy() *LoopEnricher {
	if in == nil {
		return nil
	}
	out := new(LoopEnricher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Matcher) DeepCopyInto(out *Matcher) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Matcher.
func (in *Matcher) DeepCopy() *Matcher {
	if in == nil {
		return nil
	}
	out := new(Matcher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RawDataSourceQuery) DeepCopyInto(out *RawDataSourceQuery) {
	*out = *in
	in.Request.DeepCopyInto(&out.Request)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RawDataSourceQuery.
func (in *RawDataSourceQuery) DeepCopy() *RawDataSourceQuery {
	if in == nil {
		return nil
	}
	out := new(RawDataSourceQuery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiftEnricher) DeepCopyInto(out *SiftEnricher) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiftEnricher.
func (in *SiftEnricher) DeepCopy() *SiftEnricher {
	if in == nil {
		return nil
	}
	out := new(SiftEnricher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Step) DeepCopyInto(out *Step) {
	*out = *in
	out.Timeout = in.Timeout
	if in.Enricher != nil {
		in, out := &in.Enricher, &out.Enricher
		*out = new(EnricherConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditional != nil {
		in, out := &in.Conditional, &out.Conditional
		*out = new(Conditional)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Step.
func (in *Step) DeepCopy() *Step {
	if in == nil {
		return nil
	}
	out := new(Step)
	in.DeepCopyInto(out)
	return out
}
