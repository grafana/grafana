// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v0alpha1

import (
	commonv0alpha1 "github.com/grafana/grafana/pkg/apimachinery/apis/common/v0alpha1"
)

// SecureValuesApplyConfiguration represents a declarative configuration of the SecureValues type for use
// with apply.
type SecureValuesApplyConfiguration struct {
	Token         *commonv0alpha1.InlineSecureValue `json:"token,omitempty"`
	WebhookSecret *commonv0alpha1.InlineSecureValue `json:"webhookSecret,omitempty"`
}

// SecureValuesApplyConfiguration constructs a declarative configuration of the SecureValues type for use with
// apply.
func SecureValues() *SecureValuesApplyConfiguration {
	return &SecureValuesApplyConfiguration{}
}

// WithToken sets the Token field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Token field is set to the value of the last call.
func (b *SecureValuesApplyConfiguration) WithToken(value commonv0alpha1.InlineSecureValue) *SecureValuesApplyConfiguration {
	b.Token = &value
	return b
}

// WithWebhookSecret sets the WebhookSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the WebhookSecret field is set to the value of the last call.
func (b *SecureValuesApplyConfiguration) WithWebhookSecret(value commonv0alpha1.InlineSecureValue) *SecureValuesApplyConfiguration {
	b.WebhookSecret = &value
	return b
}
