// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v0alpha1 "github.com/grafana/grafana/apps/provisioning/pkg/apis/provisioning/v0alpha1"
	provisioningv0alpha1 "github.com/grafana/grafana/apps/provisioning/pkg/generated/applyconfiguration/provisioning/v0alpha1"
	typedprovisioningv0alpha1 "github.com/grafana/grafana/apps/provisioning/pkg/generated/clientset/versioned/typed/provisioning/v0alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeHistoricJobs implements HistoricJobInterface
type fakeHistoricJobs struct {
	*gentype.FakeClientWithListAndApply[*v0alpha1.HistoricJob, *v0alpha1.HistoricJobList, *provisioningv0alpha1.HistoricJobApplyConfiguration]
	Fake *FakeProvisioningV0alpha1
}

func newFakeHistoricJobs(fake *FakeProvisioningV0alpha1, namespace string) typedprovisioningv0alpha1.HistoricJobInterface {
	return &fakeHistoricJobs{
		gentype.NewFakeClientWithListAndApply[*v0alpha1.HistoricJob, *v0alpha1.HistoricJobList, *provisioningv0alpha1.HistoricJobApplyConfiguration](
			fake.Fake,
			namespace,
			v0alpha1.SchemeGroupVersion.WithResource("historicjobs"),
			v0alpha1.SchemeGroupVersion.WithKind("HistoricJob"),
			func() *v0alpha1.HistoricJob { return &v0alpha1.HistoricJob{} },
			func() *v0alpha1.HistoricJobList { return &v0alpha1.HistoricJobList{} },
			func(dst, src *v0alpha1.HistoricJobList) { dst.ListMeta = src.ListMeta },
			func(list *v0alpha1.HistoricJobList) []*v0alpha1.HistoricJob {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v0alpha1.HistoricJobList, items []*v0alpha1.HistoricJob) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
