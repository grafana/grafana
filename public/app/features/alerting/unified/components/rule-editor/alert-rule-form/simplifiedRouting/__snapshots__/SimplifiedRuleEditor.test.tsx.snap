// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Can create a new grafana managed alert using simplified routing can create new grafana managed alert when using simplified routing and selecting a contact point 1`] = `
[
  {
    "body": {
      "interval": "1m",
      "name": "grafana-group-1",
      "rules": [
        {
          "annotations": {
            "summary": "Test alert",
          },
          "for": "5m",
          "grafana_alert": {
            "condition": "A",
            "data": [
              {
                "datasourceUid": "datasource-uid",
                "model": {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "datasource-uid",
                  },
                  "expression": "vector(1)",
                  "queryType": "alerting",
                  "refId": "A",
                },
                "queryType": "alerting",
                "refId": "A",
                "relativeTimeRange": {
                  "from": 1000,
                  "to": 2000,
                },
              },
            ],
            "exec_err_state": "Error",
            "is_paused": false,
            "namespace_uid": "uuid020c61ef",
            "no_data_state": "NoData",
            "rule_group": "grafana-group-1",
            "title": "Grafana-rule",
            "uid": "4d7125fee983",
          },
          "labels": {
            "region": "nasa",
            "severity": "critical",
          },
        },
        {
          "annotations": {},
          "for": "1m",
          "grafana_alert": {
            "condition": "B",
            "data": [
              {
                "datasourceUid": "__expr__",
                "model": {
                  "conditions": [
                    {
                      "evaluator": {
                        "params": [],
                        "type": "gt",
                      },
                      "operator": {
                        "type": "and",
                      },
                      "query": {
                        "params": [
                          "A",
                        ],
                      },
                      "reducer": {
                        "params": [],
                        "type": "last",
                      },
                      "type": "query",
                    },
                  ],
                  "datasource": {
                    "type": "__expr__",
                    "uid": "__expr__",
                  },
                  "expression": "A",
                  "reducer": "last",
                  "refId": "A",
                  "type": "reduce",
                },
                "queryType": "",
                "refId": "A",
              },
              {
                "datasourceUid": "__expr__",
                "model": {
                  "conditions": [
                    {
                      "evaluator": {
                        "params": [
                          0,
                        ],
                        "type": "gt",
                      },
                      "operator": {
                        "type": "and",
                      },
                      "query": {
                        "params": [
                          "B",
                        ],
                      },
                      "reducer": {
                        "params": [],
                        "type": "last",
                      },
                      "type": "query",
                    },
                  ],
                  "datasource": {
                    "type": "__expr__",
                    "uid": "__expr__",
                  },
                  "expression": "A",
                  "refId": "B",
                  "type": "threshold",
                },
                "queryType": "",
                "refId": "B",
              },
            ],
            "exec_err_state": "Error",
            "is_paused": false,
            "no_data_state": "NoData",
            "notification_settings": {
              "receiver": "lotsa-emails",
            },
            "title": "my great new rule",
          },
          "labels": {},
        },
      ],
    },
    "headers": [
      [
        "content-type",
        "application/json",
      ],
      [
        "accept",
        "application/json, text/plain, */*",
      ],
    ],
    "method": "POST",
    "url": "http://localhost/api/ruler/grafana/api/v1/rules/uuid020c61ef?subtype=cortex",
  },
]
`;
