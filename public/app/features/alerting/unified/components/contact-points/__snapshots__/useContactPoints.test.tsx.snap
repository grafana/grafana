// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`useContactPoints should return contact points with status 1`] = `
{
  "contactPoints": [
    {
      "grafana_managed_receiver_configs": [
        {
          "disableResolveMessage": false,
          "name": "grafana-default-email",
          "secureFields": {},
          "settings": {
            "addresses": "gilles.demey@grafana.com",
            "singleEmail": false,
          },
          "type": "email",
          "uid": "xeKQrBrnk",
          Symbol(receiver_status): {
            "lastNotifyAttempt": "2023-07-02T21:35:34.841+02:00",
            "lastNotifyAttemptDuration": "1ms",
            "lastNotifyAttemptError": "failed to send notification to email addresses: gilles.demey@grafana.com: dial tcp 192.168.1.21:1025: connect: connection refused",
            "name": "email",
            "sendResolved": true,
          },
          Symbol(receiver_metadata): {
            "description": "Sends notifications using Grafana server configured SMTP settings",
            "name": "Email",
          },
          Symbol(receiver_plugin_metadata): undefined,
        },
      ],
      "id": "grafana-default-email",
      "name": "grafana-default-email",
      "policies": [
        {
          "receiver": "grafana-default-email",
          "route": {
            "type": "normal",
          },
        },
      ],
      "provisioned": false,
    },
    {
      "grafana_managed_receiver_configs": [
        {
          "disableResolveMessage": false,
          "name": "lotsa-emails",
          "secureFields": {},
          "settings": {
            "addresses": "gilles.demey+1@grafana.com, gilles.demey+2@grafana.com, gilles.demey+3@grafana.com, gilles.demey+4@grafana.com",
            "singleEmail": false,
          },
          "type": "email",
          "uid": "af306c96-35a2-4d6e-908a-4993e245dbb2",
          Symbol(receiver_status): {
            "lastNotifyAttempt": "",
            "lastNotifyAttemptDuration": "",
            "name": "email",
            "sendResolved": true,
          },
          Symbol(receiver_metadata): {
            "description": "Sends notifications using Grafana server configured SMTP settings",
            "name": "Email",
          },
          Symbol(receiver_plugin_metadata): undefined,
        },
      ],
      "id": "lotsa-emails",
      "name": "lotsa-emails",
      "policies": [],
      "provisioned": false,
    },
    {
      "grafana_managed_receiver_configs": [
        {
          "disableResolveMessage": false,
          "name": "Oncall-integration",
          "settings": {
            "url": "https://oncall-endpoint.example.com",
          },
          "type": "oncall",
          Symbol(receiver_status): undefined,
          Symbol(receiver_metadata): {
            "description": "Sends notifications to Grafana OnCall",
            "name": "Grafana OnCall",
          },
          Symbol(receiver_plugin_metadata): {
            "icon": "public/img/alerting/oncall_logo.svg",
            "title": "Grafana OnCall",
          },
        },
      ],
      "id": "OnCall Conctact point",
      "name": "OnCall Conctact point",
      "policies": [],
      "provisioned": false,
    },
    {
      "grafana_managed_receiver_configs": [
        {
          "disableResolveMessage": false,
          "name": "provisioned-contact-point",
          "provenance": "api",
          "secureFields": {},
          "settings": {
            "addresses": "gilles.demey@grafana.com",
            "singleEmail": false,
          },
          "type": "email",
          "uid": "s8SdCVjnk",
          Symbol(receiver_status): {
            "lastNotifyAttempt": "",
            "lastNotifyAttemptDuration": "",
            "name": "email",
            "sendResolved": true,
          },
          Symbol(receiver_metadata): {
            "description": "Sends notifications using Grafana server configured SMTP settings",
            "name": "Email",
          },
          Symbol(receiver_plugin_metadata): undefined,
        },
      ],
      "id": "provisioned-contact-point",
      "name": "provisioned-contact-point",
      "policies": [
        {
          "receiver": "provisioned-contact-point",
          "route": {
            "type": "normal",
          },
        },
      ],
      "provisioned": true,
    },
    {
      "grafana_managed_receiver_configs": [
        {
          "disableResolveMessage": false,
          "name": "Slack with multiple channels",
          "secureFields": {
            "token": true,
          },
          "settings": {
            "recipient": "test-alerts",
          },
          "type": "slack",
          "uid": "c02ad56a-31da-46b9-becb-4348ec0890fd",
          Symbol(receiver_status): {
            "lastNotifyAttempt": "",
            "lastNotifyAttemptDuration": "",
            "name": "slack",
            "sendResolved": true,
          },
          Symbol(receiver_metadata): {
            "description": "Sends notifications to Slack",
            "name": "Slack",
          },
          Symbol(receiver_plugin_metadata): undefined,
        },
        {
          "disableResolveMessage": false,
          "name": "Slack with multiple channels",
          "secureFields": {
            "token": true,
          },
          "settings": {
            "recipient": "test-alerts2",
          },
          "type": "slack",
          "uid": "b286a3be-f690-49e2-8605-b075cbace2df",
          Symbol(receiver_status): {
            "lastNotifyAttempt": "",
            "lastNotifyAttemptDuration": "",
            "name": "slack",
            "sendResolved": true,
          },
          Symbol(receiver_metadata): {
            "description": "Sends notifications to Slack",
            "name": "Slack",
          },
          Symbol(receiver_plugin_metadata): undefined,
        },
      ],
      "id": "Slack with multiple channels",
      "name": "Slack with multiple channels",
      "policies": [],
      "provisioned": false,
    },
  ],
  "error": undefined,
  "isLoading": false,
}
`;

exports[`useContactPoints when having oncall plugin installed and no alert manager config data should return contact points with oncall metadata 1`] = `
{
  "contactPoints": [
    {
      "grafana_managed_receiver_configs": [
        {
          "disableResolveMessage": false,
          "name": "grafana-default-email",
          "secureFields": {},
          "settings": {
            "addresses": "gilles.demey@grafana.com",
            "singleEmail": false,
          },
          "type": "email",
          "uid": "xeKQrBrnk",
          Symbol(receiver_status): {
            "lastNotifyAttempt": "2023-07-02T21:35:34.841+02:00",
            "lastNotifyAttemptDuration": "1ms",
            "lastNotifyAttemptError": "failed to send notification to email addresses: gilles.demey@grafana.com: dial tcp 192.168.1.21:1025: connect: connection refused",
            "name": "email",
            "sendResolved": true,
          },
          Symbol(receiver_metadata): {
            "description": "Sends notifications using Grafana server configured SMTP settings",
            "name": "Email",
          },
          Symbol(receiver_plugin_metadata): undefined,
        },
      ],
      "id": "grafana-default-email",
      "name": "grafana-default-email",
      "policies": [
        {
          "receiver": "grafana-default-email",
          "route": {
            "type": "normal",
          },
        },
      ],
      "provisioned": false,
    },
    {
      "grafana_managed_receiver_configs": [
        {
          "disableResolveMessage": false,
          "name": "lotsa-emails",
          "secureFields": {},
          "settings": {
            "addresses": "gilles.demey+1@grafana.com, gilles.demey+2@grafana.com, gilles.demey+3@grafana.com, gilles.demey+4@grafana.com",
            "singleEmail": false,
          },
          "type": "email",
          "uid": "af306c96-35a2-4d6e-908a-4993e245dbb2",
          Symbol(receiver_status): {
            "lastNotifyAttempt": "",
            "lastNotifyAttemptDuration": "",
            "name": "email",
            "sendResolved": true,
          },
          Symbol(receiver_metadata): {
            "description": "Sends notifications using Grafana server configured SMTP settings",
            "name": "Email",
          },
          Symbol(receiver_plugin_metadata): undefined,
        },
      ],
      "id": "lotsa-emails",
      "name": "lotsa-emails",
      "policies": [],
      "provisioned": false,
    },
    {
      "grafana_managed_receiver_configs": [
        {
          "disableResolveMessage": false,
          "name": "Oncall-integration",
          "settings": {
            "url": "https://oncall-endpoint.example.com",
          },
          "type": "oncall",
          Symbol(receiver_status): undefined,
          Symbol(receiver_metadata): {
            "description": "Sends notifications to Grafana OnCall",
            "name": "Grafana OnCall",
          },
          Symbol(receiver_plugin_metadata): {
            "description": "grafana-integration",
            "externalUrl": "/a/grafana-oncall-app/integrations/ABC123",
            "icon": "public/img/alerting/oncall_logo.svg",
            "title": "Grafana OnCall",
            "warning": undefined,
          },
        },
      ],
      "id": "OnCall Conctact point",
      "name": "OnCall Conctact point",
      "policies": [],
      "provisioned": false,
    },
    {
      "grafana_managed_receiver_configs": [
        {
          "disableResolveMessage": false,
          "name": "provisioned-contact-point",
          "provenance": "api",
          "secureFields": {},
          "settings": {
            "addresses": "gilles.demey@grafana.com",
            "singleEmail": false,
          },
          "type": "email",
          "uid": "s8SdCVjnk",
          Symbol(receiver_status): {
            "lastNotifyAttempt": "",
            "lastNotifyAttemptDuration": "",
            "name": "email",
            "sendResolved": true,
          },
          Symbol(receiver_metadata): {
            "description": "Sends notifications using Grafana server configured SMTP settings",
            "name": "Email",
          },
          Symbol(receiver_plugin_metadata): undefined,
        },
      ],
      "id": "provisioned-contact-point",
      "name": "provisioned-contact-point",
      "policies": [
        {
          "receiver": "provisioned-contact-point",
          "route": {
            "type": "normal",
          },
        },
      ],
      "provisioned": true,
    },
    {
      "grafana_managed_receiver_configs": [
        {
          "disableResolveMessage": false,
          "name": "Slack with multiple channels",
          "secureFields": {
            "token": true,
          },
          "settings": {
            "recipient": "test-alerts",
          },
          "type": "slack",
          "uid": "c02ad56a-31da-46b9-becb-4348ec0890fd",
          Symbol(receiver_status): {
            "lastNotifyAttempt": "",
            "lastNotifyAttemptDuration": "",
            "name": "slack",
            "sendResolved": true,
          },
          Symbol(receiver_metadata): {
            "description": "Sends notifications to Slack",
            "name": "Slack",
          },
          Symbol(receiver_plugin_metadata): undefined,
        },
        {
          "disableResolveMessage": false,
          "name": "Slack with multiple channels",
          "secureFields": {
            "token": true,
          },
          "settings": {
            "recipient": "test-alerts2",
          },
          "type": "slack",
          "uid": "b286a3be-f690-49e2-8605-b075cbace2df",
          Symbol(receiver_status): {
            "lastNotifyAttempt": "",
            "lastNotifyAttemptDuration": "",
            "name": "slack",
            "sendResolved": true,
          },
          Symbol(receiver_metadata): {
            "description": "Sends notifications to Slack",
            "name": "Slack",
          },
          Symbol(receiver_plugin_metadata): undefined,
        },
      ],
      "id": "Slack with multiple channels",
      "name": "Slack with multiple channels",
      "policies": [],
      "provisioned": false,
    },
  ],
  "error": undefined,
  "isLoading": false,
}
`;
