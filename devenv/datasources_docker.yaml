
apiVersion: 1

deleteDatasources:
  - name: gdev-elasticsearch-v7-metrics
  - name: gdev-elasticsearch-v7-logs
  - name: gdev-elasticsearch-v7-metricbeat
  - name: gdev-elasticsearch-v7-filebeat

datasources:
  - name: gdev-graphite
    type: graphite
    access: proxy
    url: http://graphite11:80
    jsonData:
      graphiteVersion: "1.1"

  - name: gdev-prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090

  - name: gdev-slow-prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:3011

  - name: gdev-testdata
    isDefault: true
    type: testdata

  - name: gdev-influxdb1-influxql
    type: influxdb
    access: proxy
    user: grafana
    url: http://influxdb1:8086
    secureJsonData:
      password: grafana
    jsonData:
      dbName: site

  - name: gdev-influxdb-flux
    type: influxdb
    access: proxy
    url: http://influxdb:8086
    secureJsonData:
      token: mytoken
    jsonData:
      version: Flux
      organization: myorg
      defaultBucket: mybucket

  - name: gdev-influxdb-influxql
    type: influxdb
    access: proxy
    url: http://influxdb:8086
    jsonData:
      dbName: mybucket
      httpHeaderName1: "Authorization"
    secureJsonData:
      httpHeaderValue1: "Token mytoken"

  - name: gdev-opentsdb
    type: opentsdb
    access: proxy
    url: http://opentsdb:4242
    jsonData:
      tsdbResolution: 1
      tsdbVersion: 1

  - name: gdev-elasticsearch
    type: elasticsearch
    access: proxy
    url: http://elasticsearch:9200
    jsonData:
      index: "[logs-]YYYY.MM.DD"
      interval: Daily
      timeField: "@timestamp"

  - name: gdev-elasticsearch-filebeat
    type: elasticsearch
    access: proxy
    url: http://elasticsearch:9200
    jsonData:
      index: "[filebeat-]YYYY.MM.DD"
      interval: Daily
      timeField: "@timestamp"
      timeInterval: "10s"
      logMessageField: message
      logLevelField: fields.level

  - name: gdev-elasticsearch-metricbeat
    type: elasticsearch
    access: proxy
    url: http://elasticsearch:9200
    jsonData:
      index: "[metricbeat-]YYYY.MM.DD"
      interval: Daily
      timeField: "@timestamp"
      timeInterval: "10s"

  - name: gdev-mysql
    type: mysql
    url: mysql:3306
    database: grafana
    user: grafana
    secureJsonData:
      password: password

  - name: gdev-mysql-ds-tests
    type: mysql
    url: mysqltests:3306
    database: grafana_ds_tests
    user: grafana
    secureJsonData:
      password: password

  - name: gdev-mssql
    type: mssql
    url: mssql:1433
    database: grafana
    user: grafana
    secureJsonData:
      password: Password!

  - name: gdev-mssql-tls
    type: mssql
    url: localhost:1434
    database: grafana
    user: grafana
    jsonData:
      encrypt: "true"
      tlsSkipVerify: true
    secureJsonData:
      password: Password!

  - name: gdev-mssql-ds-tests
    type: mssql
    url: mssqltests:1433
    database: grafanatest
    user: grafana
    secureJsonData:
      password: Password!

  - name: gdev-postgres
    type: postgres
    url: postgres:5432
    database: grafana
    user: grafana
    secureJsonData:
      password: password
    jsonData:
      sslmode: "disable"

  - name: gdev-postgres-ds-tests
    type: postgres
    url: postgrestest:5432
    database: grafanadstest
    user: grafanatest
    secureJsonData:
      password: grafanatest
    jsonData:
      sslmode: "disable"

  - name: gdev-cloudwatch
    type: cloudwatch
    editable: true
    jsonData:
      authType: credentials
      defaultRegion: eu-west-2

  - name: gdev-loki
    type: loki
    uid: gdev-loki
    access: proxy
    url: http://loki:3100
    editable: false

  - name: gdev-pyroscope
    type: grafana-pyroscope-datasource
    uid: gdev-pyroscope
    access: proxy
    url: http://pyroscope:4040
    editable: false

  - name: gdev-tempo
    type: tempo
    uid: gdev-tempo
    access: proxy
    url: http://tempo:3200
    editable: false
    correlations:
      - targetUID: gdev-loki
        label: 'Logs (correlation)'
        description: 'Correlation to logs stored in Loki'
        config:
          type: query
          target:
            expr: '{ job="job" }'
          field: 'traceID'
    jsonData:
      tracesToLogsV2:
        datasourceUid: gdev-loki
        spanStartTimeShift: '5m'
        spanEndTimeShift: '-5m'
        customQuery: true
        query: '{filename="/var/log/grafana/grafana.log"} |="$${__span.traceId}"'
      tracesToProfiles:
        datasourceUid: gdev-pyroscope
        profileTypeId: 'process_cpu:cpu:nanoseconds:cpu:nanoseconds'
      tracesToMetrics:
        datasourceUid: gdev-prometheus
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: [{ key: 'job' }]
        queries:
          - name: 'Metrics'
            query: 'sum(rate({$$__tags}[5m]))'
      serviceMap:
        datasourceUid: 'gdev-prometheus'
        histogramType: 'both' # 'classic' or 'native' or 'both'
