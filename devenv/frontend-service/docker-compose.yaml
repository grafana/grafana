name: grafana-fs-dev

services:
  proxy:
    image: grafana-proxy
    build:
      context: .
      dockerfile: proxy.dockerfile
    volumes:
      - ../../public/build:/cdn/public/build
      - ../../public/fonts:/cdn/public/fonts
    ports:
      - '3000:80' # Gateway
      - '3010:81' # CDN

  backend:
    image: grafana-fs-dev
    build:
      context: ../..
      dockerfile: devenv/frontend-service/grafana-fs-dev.dockerfile
    entrypoint: ['bin/grafana', 'server']
    volumes:
      - backend-data:/grafana/data
    environment:
      GF_SERVER_CDN_URL: http://localhost:3010
      GF_FEATURE_TOGGLES_ENABLE: multiTenantFrontend
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: postgres
      GF_DATABASE_NAME: grafana
      GF_DATABASE_USER: grafana
      GF_DATABASE_PASSWORD: grafana
    ports:
      - '3011:3000'

  frontend-service:
    image: grafana-fs-dev
    build:
      context: ../..
      dockerfile: devenv/frontend-service/grafana-fs-dev.dockerfile
    entrypoint: ['bin/grafana', 'server', 'target']
    ports:
      - '3012:3000'
    environment:
      GF_DEFAULT_APP_MODE: development
      GF_DEFAULT_TARGET: frontend-server
      GF_SECURITY_CONTENT_SECURITY_POLICY: false
      GF_SERVER_CDN_URL: http://localhost:3010

  postgres:
    image: postgres:16.1-alpine3.19
    environment:
      POSTGRES_USER: grafana
      POSTGRES_PASSWORD: grafana
      POSTGRES_DB: grafana
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  backend-data:
  postgres-data:
