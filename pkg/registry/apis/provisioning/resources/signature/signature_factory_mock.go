// Code generated by mockery v2.52.4. DO NOT EDIT.

package signature

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockSignerFactory is an autogenerated mock type for the SignerFactory type
type MockSignerFactory struct {
	mock.Mock
}

type MockSignerFactory_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSignerFactory) EXPECT() *MockSignerFactory_Expecter {
	return &MockSignerFactory_Expecter{mock: &_m.Mock}
}

// New provides a mock function with given fields: ctx, opts
func (_m *MockSignerFactory) New(ctx context.Context, opts SignOptions) (Signer, error) {
	ret := _m.Called(ctx, opts)

	if len(ret) == 0 {
		panic("no return value specified for New")
	}

	var r0 Signer
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, SignOptions) (Signer, error)); ok {
		return rf(ctx, opts)
	}
	if rf, ok := ret.Get(0).(func(context.Context, SignOptions) Signer); ok {
		r0 = rf(ctx, opts)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Signer)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, SignOptions) error); ok {
		r1 = rf(ctx, opts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockSignerFactory_New_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'New'
type MockSignerFactory_New_Call struct {
	*mock.Call
}

// New is a helper method to define mock.On call
//   - ctx context.Context
//   - opts SignOptions
func (_e *MockSignerFactory_Expecter) New(ctx interface{}, opts interface{}) *MockSignerFactory_New_Call {
	return &MockSignerFactory_New_Call{Call: _e.mock.On("New", ctx, opts)}
}

func (_c *MockSignerFactory_New_Call) Run(run func(ctx context.Context, opts SignOptions)) *MockSignerFactory_New_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(SignOptions))
	})
	return _c
}

func (_c *MockSignerFactory_New_Call) Return(_a0 Signer, _a1 error) *MockSignerFactory_New_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockSignerFactory_New_Call) RunAndReturn(run func(context.Context, SignOptions) (Signer, error)) *MockSignerFactory_New_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSignerFactory creates a new instance of MockSignerFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSignerFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSignerFactory {
	mock := &MockSignerFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
