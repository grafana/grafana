// Code generated by mockery v2.36.1. DO NOT EDIT.

package publicdashboards

import (
	contextmodel "github.com/grafana/grafana/pkg/services/contexthandler/model"
	mock "github.com/stretchr/testify/mock"
)

// FakePublicDashboardMiddleware is an autogenerated mock type for the Middleware type
type FakePublicDashboardMiddleware struct {
	mock.Mock
}

// HandleAccessView provides a mock function with given fields: c
func (_m *FakePublicDashboardMiddleware) HandleAccessView(c *contextmodel.ReqContext) {
	_m.Called(c)
}

// HandleApi provides a mock function with given fields: c
func (_m *FakePublicDashboardMiddleware) HandleApi(c *contextmodel.ReqContext) {
	_m.Called(c)
}

// HandleConfirmAccessView provides a mock function with given fields: c
func (_m *FakePublicDashboardMiddleware) HandleConfirmAccessView(c *contextmodel.ReqContext) {
	_m.Called(c)
}

// HandleView provides a mock function with given fields: c
func (_m *FakePublicDashboardMiddleware) HandleView(c *contextmodel.ReqContext) {
	_m.Called(c)
}

// NewFakePublicDashboardMiddleware creates a new instance of FakePublicDashboardMiddleware. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFakePublicDashboardMiddleware(t interface {
	mock.TestingT
	Cleanup(func())
}) *FakePublicDashboardMiddleware {
	mock := &FakePublicDashboardMiddleware{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
