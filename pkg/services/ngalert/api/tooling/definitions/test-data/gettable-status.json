{
  "cluster": {
    "name": "01K7SGS3KSRG8FT5RZQPFN72NB",
    "peers": [
      {
        "address": "172.18.0.5:9094",
        "name": "01K7SGS3KSRG8FT5RZQPFN72NB"
      }
    ],
    "status": "ready"
  },
  "config": {
    "original": "global:\n  resolve_timeout: 5m\n  http_config:\n    follow_redirects: true\n    enable_http2: true\n  smtp_from: alertmanager@example.org\n  smtp_hello: localhost\n  smtp_smarthost: localhost:25\n  smtp_require_tls: true\n  smtp_tls_config:\n    insecure_skip_verify: false\n  pagerduty_url: https://events.pagerduty.com/v2/enqueue\n  opsgenie_api_url: https://api.opsgenie.com/\n  wechat_api_url: https://qyapi.weixin.qq.com/cgi-bin/\n  victorops_api_url: https://alert.victorops.com/integrations/generic/20131114/alert/\n  telegram_api_url: https://api.telegram.org\n  webex_api_url: https://webexapis.com/v1/messages\n  rocketchat_api_url: https://open.rocket.chat/\nroute:\n  receiver: team-X-mails\n  group_by:\n  - alertname\n  - cluster\n  continue: false\n  routes:\n  - receiver: team-X-mails\n    matchers:\n    - service=~\"^(foo1|foo2|baz)$\"\n    continue: false\n    routes:\n    - receiver: team-X-pager\n      matchers:\n      - severity=\"critical\"\n      continue: false\n  - receiver: team-Y-mails\n    matchers:\n    - service=\"files\"\n    continue: false\n    routes:\n    - receiver: team-Y-pager\n      matchers:\n      - severity=\"critical\"\n      mute_time_intervals:\n      - nightly-quiet-time-deprecated\n      continue: false\n  - receiver: team-DB-pager\n    group_by:\n    - alertname\n    - cluster\n    - database\n    matchers:\n    - service=\"database\"\n    continue: false\n    routes:\n    - receiver: team-X-pager\n      matchers:\n      - owner=\"team-X\"\n      mute_time_intervals:\n      - nightly-quiet-time\n      continue: false\n    - receiver: team-Y-pager\n      matchers:\n      - owner=\"team-Y\"\n      continue: false\n  group_wait: 30s\n  group_interval: 5m\n  repeat_interval: 3h\ninhibit_rules:\n- source_matchers:\n  - severity=\"critical\"\n  target_matchers:\n  - severity=\"warning\"\n  equal:\n  - alertname\nreceivers:\n- name: team-X-mails\n  email_configs:\n  - send_resolved: false\n    to: team-X+alerts@example.org, team-Y+alerts@example.org\n    from: alertmanager@example.org\n    hello: localhost\n    smarthost: localhost:25\n    headers:\n      From: alertmanager@example.org\n      Subject: '{{ template \"email.default.subject\" . }}'\n      To: team-X+alerts@example.org, team-Y+alerts@example.org\n    html: '{{ template \"email.default.html\" . }}'\n    require_tls: true\n    tls_config:\n      insecure_skip_verify: false\n- name: team-X-pager\n  email_configs:\n  - send_resolved: false\n    to: team-X+alerts-critical@example.org\n    from: alertmanager@example.org\n    hello: localhost\n    smarthost: localhost:25\n    headers:\n      From: alertmanager@example.org\n      Subject: '{{ template \"email.default.subject\" . }}'\n      To: team-X+alerts-critical@example.org\n    html: '{{ template \"email.default.html\" . }}'\n    require_tls: true\n    tls_config:\n      insecure_skip_verify: false\n  pagerduty_configs:\n  - send_resolved: true\n    http_config:\n      follow_redirects: true\n      enable_http2: true\n    routing_key: <secret>\n    url: https://events.pagerduty.com/v2/enqueue\n    client: '{{ template \"pagerduty.default.client\" . }}'\n    client_url: '{{ template \"pagerduty.default.clientURL\" . }}'\n    description: '{{ template \"pagerduty.default.description\" .}}'\n    details:\n      firing: '{{ template \"pagerduty.default.instances\" .Alerts.Firing }}'\n      num_firing: '{{ .Alerts.Firing | len }}'\n      num_resolved: '{{ .Alerts.Resolved | len }}'\n      resolved: '{{ template \"pagerduty.default.instances\" .Alerts.Resolved }}'\n    source: '{{ template \"pagerduty.default.client\" . }}'\n- name: team-Y-mails\n  email_configs:\n  - send_resolved: false\n    to: team-Y+alerts@example.org\n    from: alertmanager@example.org\n    hello: localhost\n    smarthost: localhost:25\n    headers:\n      From: alertmanager@example.org\n      Subject: '{{ template \"email.default.subject\" . }}'\n      To: team-Y+alerts@example.org\n    html: '{{ template \"email.default.html\" . }}'\n    require_tls: true\n    tls_config:\n      insecure_skip_verify: false\n- name: team-Y-pager\n  pagerduty_configs:\n  - send_resolved: true\n    http_config:\n      follow_redirects: true\n      enable_http2: true\n    routing_key: <secret>\n    url: https://events.pagerduty.com/v2/enqueue\n    client: '{{ template \"pagerduty.default.client\" . }}'\n    client_url: '{{ template \"pagerduty.default.clientURL\" . }}'\n    description: '{{ template \"pagerduty.default.description\" .}}'\n    details:\n      firing: '{{ template \"pagerduty.default.instances\" .Alerts.Firing }}'\n      num_firing: '{{ .Alerts.Firing | len }}'\n      num_resolved: '{{ .Alerts.Resolved | len }}'\n      resolved: '{{ template \"pagerduty.default.instances\" .Alerts.Resolved }}'\n    source: '{{ template \"pagerduty.default.client\" . }}'\n- name: team-DB-pager\n  pagerduty_configs:\n  - send_resolved: true\n    http_config:\n      follow_redirects: true\n      enable_http2: true\n    routing_key: <secret>\n    url: https://events.pagerduty.com/v2/enqueue\n    client: '{{ template \"pagerduty.default.client\" . }}'\n    client_url: '{{ template \"pagerduty.default.clientURL\" . }}'\n    description: '{{ template \"pagerduty.default.description\" .}}'\n    details:\n      firing: '{{ template \"pagerduty.default.instances\" .Alerts.Firing }}'\n      num_firing: '{{ .Alerts.Firing | len }}'\n      num_resolved: '{{ .Alerts.Resolved | len }}'\n      resolved: '{{ template \"pagerduty.default.instances\" .Alerts.Resolved }}'\n    source: '{{ template \"pagerduty.default.client\" . }}'\ntemplates:\n- /etc/alertmanager/templates/*.tmpl\nmute_time_intervals:\n- name: nightly-quiet-time-deprecated\n  time_intervals:\n  - times:\n    - start_time: \"18:00\"\n      end_time: \"23:59\"\n    - start_time: \"00:00\"\n      end_time: \"07:00\"\ntime_intervals:\n- name: nightly-quiet-time\n  time_intervals:\n  - times:\n    - start_time: \"18:00\"\n      end_time: \"23:59\"\n    - start_time: \"00:00\"\n      end_time: \"07:00\"\n"
  },
  "uptime": "2025-10-17T16:41:50.500Z",
  "versionInfo": {
    "branch": "HEAD",
    "buildDate": "20250115-14:22:34",
    "buildUser": "root@40be7f318ba7",
    "goVersion": "go1.23.4",
    "revision": "4ce04fb010bd626fca35928dcfe82f6f2da52ced",
    "version": "0.28.0"
  }
}